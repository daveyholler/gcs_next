.listItems {
  margin: auto;
  width: 100%;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-around;
}

.listItem {
  border-radius: 4px;
  overflow: hidden;
  width: 25%;
  max-width: 240px;
  position: relative;
  margin: 0.5rem;
  padding-bottom: 30%;
  height: 0;
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
  transition: transform .15s cubic-bezier(0.175, 0.885, 0.32, 1.275);

  &::before {
    content: '';
    width: 100%;
    height: 100%;
    display: inline-block;
    position: absolute;
    top: 0;
    left: 0;
    background-blend-mode: multiply;
    transition: opacity .15s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  }

  &:hover{
    transform: scale(1.05);
    z-index: 1000;
    &::before {
      opacity: 0;
    }
  }

  .listItem__content {
    position: absolute;
    z-index: 10;
    width: 100%;
    top: 0;
    left: 0;
    height: 7rem;
    background-image: linear-gradient(180deg, rgba(0,0,0,0.85) 0%, rgba(0,0,0,0.00) 100%);
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    box-sizing: border-box;
    padding: 2rem 1rem;

    p.title {
      color: white !important;
    }
  }
}

.listItem:nth-of-type(10n + 0){
  &::before {
    @include gradient1
  }
}

.listItem:nth-of-type(10n + 1){
  &::before {
    @include gradient2
  }
}

.listItem:nth-of-type(10n + 2){
  &::before {
    @include gradient3
  }
}

.listItem:nth-of-type(10n + 3){
  &::before {
    @include gradient4
  }
}

.listItem:nth-of-type(10n + 4){
  &::before {
    @include gradient5
  }
}

.listItem:nth-of-type(10n + 5){
  &::before {
    @include gradient3_reverse
  }
}

.listItem:nth-of-type(10n + 6){
  &::before {
    @include gradient2_reverse
  }
}

.listItem:nth-of-type(10n + 7){
  &::before {
    @include gradient1_reverse
  }
}

.listItem:nth-of-type(10n + 8){
  &::before {
    @include gradient5_reverse
  }
}

.listItem:nth-of-type(10n + 9){
  &::before {
    @include gradient4_reverse
  }
}
